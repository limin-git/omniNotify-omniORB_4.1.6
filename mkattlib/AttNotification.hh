// This file is generated by omniidl (C++ backend)- omniORB_4_1. Do not edit.
#ifndef __AttNotification_hh__
#define __AttNotification_hh__

#ifndef __CORBA_H_EXTERNAL_GUARD__
#include <omniORB4/CORBA.h>
#endif

#ifndef  USE_stub_in_nt_dll
# define USE_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif
#ifndef  USE_core_stub_in_nt_dll
# define USE_core_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif
#ifndef  USE_dyn_stub_in_nt_dll
# define USE_dyn_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif


#include "ATTN_sysdep.h"
#ifndef __CosEventComm_hh_EXTERNAL_GUARD__
#define __CosEventComm_hh_EXTERNAL_GUARD__
#include "CosEventComm.hh"
#endif
#ifndef __CosEventChannelAdmin_hh_EXTERNAL_GUARD__
#define __CosEventChannelAdmin_hh_EXTERNAL_GUARD__
#include "CosEventChannelAdmin.hh"
#endif
#ifndef __CosNotification_hh_EXTERNAL_GUARD__
#define __CosNotification_hh_EXTERNAL_GUARD__
#include "CosNotification.hh"
#endif
#ifndef __CosNotifyComm_hh_EXTERNAL_GUARD__
#define __CosNotifyComm_hh_EXTERNAL_GUARD__
#include "CosNotifyComm.hh"
#endif
#ifndef __CosNotifyFilter_hh_EXTERNAL_GUARD__
#define __CosNotifyFilter_hh_EXTERNAL_GUARD__
#include "CosNotifyFilter.hh"
#endif
#ifndef __CosNotifyChannelAdmin_hh_EXTERNAL_GUARD__
#define __CosNotifyChannelAdmin_hh_EXTERNAL_GUARD__
#include "CosNotifyChannelAdmin.hh"
#endif



#ifdef USE_stub_in_nt_dll
# ifndef USE_core_stub_in_nt_dll
#  define USE_core_stub_in_nt_dll
# endif
# ifndef USE_dyn_stub_in_nt_dll
#  define USE_dyn_stub_in_nt_dll
# endif
#endif

#ifdef _core_attr
# error "A local CPP macro _core_attr has already been defined."
#else
# ifdef  USE_core_stub_in_nt_dll
#  define _core_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _core_attr
# endif
#endif

#ifdef _dyn_attr
# error "A local CPP macro _dyn_attr has already been defined."
#else
# ifdef  USE_dyn_stub_in_nt_dll
#  define _dyn_attr _OMNIORB_NTDLL_IMPORT
# else
#  define _dyn_attr
# endif
#endif





_CORBA_MODULE AttNotification

_CORBA_MODULE_BEG

#ifndef __AttNotification_mInteractive__
#define __AttNotification_mInteractive__

  class Interactive;
  class _objref_Interactive;
  class _impl_Interactive;
  
  typedef _objref_Interactive* Interactive_ptr;
  typedef Interactive_ptr InteractiveRef;

  class Interactive_Helper {
  public:
    typedef Interactive_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Interactive, Interactive_Helper> Interactive_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Interactive,Interactive_Helper > Interactive_out;

#endif

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_IactSeq;

  class IactSeq_var;

  class IactSeq : public _CORBA_Unbounded_Sequence_ObjRef< _objref_Interactive, _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper> , Interactive_Helper >  {
  public:
    typedef IactSeq_var _var_type;
    inline IactSeq() {}
    inline IactSeq(const IactSeq& _s)
      : _CORBA_Unbounded_Sequence_ObjRef< _objref_Interactive, _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper> , Interactive_Helper > (_s) {}

    inline IactSeq(_CORBA_ULong _max)
      : _CORBA_Unbounded_Sequence_ObjRef< _objref_Interactive, _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper> , Interactive_Helper > (_max) {}
    inline IactSeq(_CORBA_ULong _max, _CORBA_ULong _len, Interactive_ptr* _val, _CORBA_Boolean _rel=0)
      : _CORBA_Unbounded_Sequence_ObjRef< _objref_Interactive, _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper> , Interactive_Helper > (_max, _len, _val, _rel) {}

  

    inline IactSeq& operator = (const IactSeq& _s) {
      _CORBA_Unbounded_Sequence_ObjRef< _objref_Interactive, _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper> , Interactive_Helper > ::operator=(_s);
      return *this;
    }
  };

  class IactSeq_out;

  class IactSeq_var {
  public:
    inline IactSeq_var() : _pd_seq(0) {}
    inline IactSeq_var(IactSeq* _s) : _pd_seq(_s) {}
    inline IactSeq_var(const IactSeq_var& _s) {
      if( _s._pd_seq )  _pd_seq = new IactSeq(*_s._pd_seq);
      else              _pd_seq = 0;
    }
    inline ~IactSeq_var() { if( _pd_seq )  delete _pd_seq; }
      
    inline IactSeq_var& operator = (IactSeq* _s) {
      if( _pd_seq )  delete _pd_seq;
      _pd_seq = _s;
      return *this;
    }
    inline IactSeq_var& operator = (const IactSeq_var& _s) {
      if( _s._pd_seq ) {
        if( !_pd_seq )  _pd_seq = new IactSeq;
        *_pd_seq = *_s._pd_seq;
      } else if( _pd_seq ) {
        delete _pd_seq;
        _pd_seq = 0;
      }
      return *this;
    }
    inline _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper>  operator [] (_CORBA_ULong _s) {
      return (*_pd_seq)[_s];
    }

  

    inline IactSeq* operator -> () { return _pd_seq; }
    inline const IactSeq* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
    inline operator IactSeq& () const { return *_pd_seq; }
#else
    inline operator const IactSeq& () const { return *_pd_seq; }
    inline operator IactSeq& () { return *_pd_seq; }
#endif
      
    inline const IactSeq& in() const { return *_pd_seq; }
    inline IactSeq&       inout()    { return *_pd_seq; }
    inline IactSeq*&      out() {
      if( _pd_seq ) { delete _pd_seq; _pd_seq = 0; }
      return _pd_seq;
    }
    inline IactSeq* _retn() { IactSeq* tmp = _pd_seq; _pd_seq = 0; return tmp; }
      
    friend class IactSeq_out;
    
  private:
    IactSeq* _pd_seq;
  };

  class IactSeq_out {
  public:
    inline IactSeq_out(IactSeq*& _s) : _data(_s) { _data = 0; }
    inline IactSeq_out(IactSeq_var& _s)
      : _data(_s._pd_seq) { _s = (IactSeq*) 0; }
    inline IactSeq_out(const IactSeq_out& _s) : _data(_s._data) {}
    inline IactSeq_out& operator = (const IactSeq_out& _s) {
      _data = _s._data;
      return *this;
    }
    inline IactSeq_out& operator = (IactSeq* _s) {
      _data = _s;
      return *this;
    }
    inline operator IactSeq*&()  { return _data; }
    inline IactSeq*& ptr()       { return _data; }
    inline IactSeq* operator->() { return _data; }

    inline _CORBA_ObjRef_Element< _objref_Interactive, Interactive_Helper>  operator [] (_CORBA_ULong _i) {
      return (*_data)[_i];
    }

  

    IactSeq*& _data;

  private:
    IactSeq_out();
    IactSeq_out& operator=(const IactSeq_var&);
  };

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_NameSeq;

  class NameSeq_var;

  class NameSeq : public _CORBA_Unbounded_Sequence_String {
  public:
    typedef NameSeq_var _var_type;
    inline NameSeq() {}
    inline NameSeq(const NameSeq& _s)
      : _CORBA_Unbounded_Sequence_String(_s) {}

    inline NameSeq(_CORBA_ULong _max)
      : _CORBA_Unbounded_Sequence_String(_max) {}
    inline NameSeq(_CORBA_ULong _max, _CORBA_ULong _len, char** _val, _CORBA_Boolean _rel=0)
      : _CORBA_Unbounded_Sequence_String(_max, _len, _val, _rel) {}

  

    inline NameSeq& operator = (const NameSeq& _s) {
      _CORBA_Unbounded_Sequence_String::operator=(_s);
      return *this;
    }
  };

  class NameSeq_out;

  class NameSeq_var {
  public:
    inline NameSeq_var() : _pd_seq(0) {}
    inline NameSeq_var(NameSeq* _s) : _pd_seq(_s) {}
    inline NameSeq_var(const NameSeq_var& _s) {
      if( _s._pd_seq )  _pd_seq = new NameSeq(*_s._pd_seq);
      else              _pd_seq = 0;
    }
    inline ~NameSeq_var() { if( _pd_seq )  delete _pd_seq; }
      
    inline NameSeq_var& operator = (NameSeq* _s) {
      if( _pd_seq )  delete _pd_seq;
      _pd_seq = _s;
      return *this;
    }
    inline NameSeq_var& operator = (const NameSeq_var& _s) {
      if( _s._pd_seq ) {
        if( !_pd_seq )  _pd_seq = new NameSeq;
        *_pd_seq = *_s._pd_seq;
      } else if( _pd_seq ) {
        delete _pd_seq;
        _pd_seq = 0;
      }
      return *this;
    }
    inline _CORBA_String_element operator [] (_CORBA_ULong _s) {
      return (*_pd_seq)[_s];
    }

  

    inline NameSeq* operator -> () { return _pd_seq; }
    inline const NameSeq* operator -> () const { return _pd_seq; }
#if defined(__GNUG__)
    inline operator NameSeq& () const { return *_pd_seq; }
#else
    inline operator const NameSeq& () const { return *_pd_seq; }
    inline operator NameSeq& () { return *_pd_seq; }
#endif
      
    inline const NameSeq& in() const { return *_pd_seq; }
    inline NameSeq&       inout()    { return *_pd_seq; }
    inline NameSeq*&      out() {
      if( _pd_seq ) { delete _pd_seq; _pd_seq = 0; }
      return _pd_seq;
    }
    inline NameSeq* _retn() { NameSeq* tmp = _pd_seq; _pd_seq = 0; return tmp; }
      
    friend class NameSeq_out;
    
  private:
    NameSeq* _pd_seq;
  };

  class NameSeq_out {
  public:
    inline NameSeq_out(NameSeq*& _s) : _data(_s) { _data = 0; }
    inline NameSeq_out(NameSeq_var& _s)
      : _data(_s._pd_seq) { _s = (NameSeq*) 0; }
    inline NameSeq_out(const NameSeq_out& _s) : _data(_s._data) {}
    inline NameSeq_out& operator = (const NameSeq_out& _s) {
      _data = _s._data;
      return *this;
    }
    inline NameSeq_out& operator = (NameSeq* _s) {
      _data = _s;
      return *this;
    }
    inline operator NameSeq*&()  { return _data; }
    inline NameSeq*& ptr()       { return _data; }
    inline NameSeq* operator->() { return _data; }

    inline _CORBA_String_element operator [] (_CORBA_ULong _i) {
      return (*_data)[_i];
    }

  

    NameSeq*& _data;

  private:
    NameSeq_out();
    NameSeq_out& operator=(const NameSeq_var&);
  };

#ifndef __AttNotification_mInteractive__
#define __AttNotification_mInteractive__

  class Interactive;
  class _objref_Interactive;
  class _impl_Interactive;
  
  typedef _objref_Interactive* Interactive_ptr;
  typedef Interactive_ptr InteractiveRef;

  class Interactive_Helper {
  public:
    typedef Interactive_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Interactive, Interactive_Helper> Interactive_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Interactive,Interactive_Helper > Interactive_out;

#endif

  // interface Interactive
  class Interactive {
  public:
    // Declarations for this interface type.
    typedef Interactive_ptr _ptr_type;
    typedef Interactive_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_Interactive :
    public virtual ::CORBA::Object,
    public virtual omniObjRef
  {
  public:
    char* do_command(const char* cmd, ::CORBA::Boolean& success, ::CORBA::Boolean& target_change, ::AttNotification::Interactive_out next_target);
    NameSeq* my_name();
    NameSeq* child_names();
    IactSeq* children(::CORBA::Boolean only_cleanup_candidates);
    ::CORBA::Boolean safe_cleanup();

    inline _objref_Interactive()  { _PR_setobj(0); }  // nil
    _objref_Interactive(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_Interactive();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_Interactive(const _objref_Interactive&);
    _objref_Interactive& operator = (const _objref_Interactive&);
    // not implemented

    friend class Interactive;
  };

  class _pof_Interactive : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_Interactive() : _OMNI_NS(proxyObjectFactory)(Interactive::_PD_repoId) {}
    virtual ~_pof_Interactive();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_Interactive :
    public virtual omniServant
  {
  public:
    virtual ~_impl_Interactive();

    virtual char* do_command(const char* cmd, ::CORBA::Boolean& success, ::CORBA::Boolean& target_change, ::AttNotification::Interactive_out next_target) = 0;
    virtual NameSeq* my_name() = 0;
    virtual NameSeq* child_names() = 0;
    virtual IactSeq* children(::CORBA::Boolean only_cleanup_candidates) = 0;
    virtual ::CORBA::Boolean safe_cleanup() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Interactive;

#ifndef __AttNotification_mCosEvProxyPushSupplier__
#define __AttNotification_mCosEvProxyPushSupplier__

  class CosEvProxyPushSupplier;
  class _objref_CosEvProxyPushSupplier;
  class _impl_CosEvProxyPushSupplier;
  
  typedef _objref_CosEvProxyPushSupplier* CosEvProxyPushSupplier_ptr;
  typedef CosEvProxyPushSupplier_ptr CosEvProxyPushSupplierRef;

  class CosEvProxyPushSupplier_Helper {
  public:
    typedef CosEvProxyPushSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_CosEvProxyPushSupplier, CosEvProxyPushSupplier_Helper> CosEvProxyPushSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_CosEvProxyPushSupplier,CosEvProxyPushSupplier_Helper > CosEvProxyPushSupplier_out;

#endif

  // interface CosEvProxyPushSupplier
  class CosEvProxyPushSupplier {
  public:
    // Declarations for this interface type.
    typedef CosEvProxyPushSupplier_ptr _ptr_type;
    typedef CosEvProxyPushSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_CosEvProxyPushSupplier :
    public virtual _objref_Interactive,
    public virtual CosEventChannelAdmin::_objref_ProxyPushSupplier
  {
  public:
    

    inline _objref_CosEvProxyPushSupplier()  { _PR_setobj(0); }  // nil
    _objref_CosEvProxyPushSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_CosEvProxyPushSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_CosEvProxyPushSupplier(const _objref_CosEvProxyPushSupplier&);
    _objref_CosEvProxyPushSupplier& operator = (const _objref_CosEvProxyPushSupplier&);
    // not implemented

    friend class CosEvProxyPushSupplier;
  };

  class _pof_CosEvProxyPushSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_CosEvProxyPushSupplier() : _OMNI_NS(proxyObjectFactory)(CosEvProxyPushSupplier::_PD_repoId) {}
    virtual ~_pof_CosEvProxyPushSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_CosEvProxyPushSupplier :
    public virtual _impl_Interactive,
    public virtual CosEventChannelAdmin::_impl_ProxyPushSupplier
  {
  public:
    virtual ~_impl_CosEvProxyPushSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CosEvProxyPushSupplier;

#ifndef __AttNotification_mCosEvProxyPullSupplier__
#define __AttNotification_mCosEvProxyPullSupplier__

  class CosEvProxyPullSupplier;
  class _objref_CosEvProxyPullSupplier;
  class _impl_CosEvProxyPullSupplier;
  
  typedef _objref_CosEvProxyPullSupplier* CosEvProxyPullSupplier_ptr;
  typedef CosEvProxyPullSupplier_ptr CosEvProxyPullSupplierRef;

  class CosEvProxyPullSupplier_Helper {
  public:
    typedef CosEvProxyPullSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_CosEvProxyPullSupplier, CosEvProxyPullSupplier_Helper> CosEvProxyPullSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_CosEvProxyPullSupplier,CosEvProxyPullSupplier_Helper > CosEvProxyPullSupplier_out;

#endif

  // interface CosEvProxyPullSupplier
  class CosEvProxyPullSupplier {
  public:
    // Declarations for this interface type.
    typedef CosEvProxyPullSupplier_ptr _ptr_type;
    typedef CosEvProxyPullSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_CosEvProxyPullSupplier :
    public virtual _objref_Interactive,
    public virtual CosEventChannelAdmin::_objref_ProxyPullSupplier
  {
  public:
    

    inline _objref_CosEvProxyPullSupplier()  { _PR_setobj(0); }  // nil
    _objref_CosEvProxyPullSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_CosEvProxyPullSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_CosEvProxyPullSupplier(const _objref_CosEvProxyPullSupplier&);
    _objref_CosEvProxyPullSupplier& operator = (const _objref_CosEvProxyPullSupplier&);
    // not implemented

    friend class CosEvProxyPullSupplier;
  };

  class _pof_CosEvProxyPullSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_CosEvProxyPullSupplier() : _OMNI_NS(proxyObjectFactory)(CosEvProxyPullSupplier::_PD_repoId) {}
    virtual ~_pof_CosEvProxyPullSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_CosEvProxyPullSupplier :
    public virtual _impl_Interactive,
    public virtual CosEventChannelAdmin::_impl_ProxyPullSupplier
  {
  public:
    virtual ~_impl_CosEvProxyPullSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CosEvProxyPullSupplier;

#ifndef __AttNotification_mCosEvProxyPushConsumer__
#define __AttNotification_mCosEvProxyPushConsumer__

  class CosEvProxyPushConsumer;
  class _objref_CosEvProxyPushConsumer;
  class _impl_CosEvProxyPushConsumer;
  
  typedef _objref_CosEvProxyPushConsumer* CosEvProxyPushConsumer_ptr;
  typedef CosEvProxyPushConsumer_ptr CosEvProxyPushConsumerRef;

  class CosEvProxyPushConsumer_Helper {
  public:
    typedef CosEvProxyPushConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_CosEvProxyPushConsumer, CosEvProxyPushConsumer_Helper> CosEvProxyPushConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_CosEvProxyPushConsumer,CosEvProxyPushConsumer_Helper > CosEvProxyPushConsumer_out;

#endif

  // interface CosEvProxyPushConsumer
  class CosEvProxyPushConsumer {
  public:
    // Declarations for this interface type.
    typedef CosEvProxyPushConsumer_ptr _ptr_type;
    typedef CosEvProxyPushConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_CosEvProxyPushConsumer :
    public virtual _objref_Interactive,
    public virtual CosEventChannelAdmin::_objref_ProxyPushConsumer
  {
  public:
    

    inline _objref_CosEvProxyPushConsumer()  { _PR_setobj(0); }  // nil
    _objref_CosEvProxyPushConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_CosEvProxyPushConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_CosEvProxyPushConsumer(const _objref_CosEvProxyPushConsumer&);
    _objref_CosEvProxyPushConsumer& operator = (const _objref_CosEvProxyPushConsumer&);
    // not implemented

    friend class CosEvProxyPushConsumer;
  };

  class _pof_CosEvProxyPushConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_CosEvProxyPushConsumer() : _OMNI_NS(proxyObjectFactory)(CosEvProxyPushConsumer::_PD_repoId) {}
    virtual ~_pof_CosEvProxyPushConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_CosEvProxyPushConsumer :
    public virtual _impl_Interactive,
    public virtual CosEventChannelAdmin::_impl_ProxyPushConsumer
  {
  public:
    virtual ~_impl_CosEvProxyPushConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CosEvProxyPushConsumer;

#ifndef __AttNotification_mCosEvProxyPullConsumer__
#define __AttNotification_mCosEvProxyPullConsumer__

  class CosEvProxyPullConsumer;
  class _objref_CosEvProxyPullConsumer;
  class _impl_CosEvProxyPullConsumer;
  
  typedef _objref_CosEvProxyPullConsumer* CosEvProxyPullConsumer_ptr;
  typedef CosEvProxyPullConsumer_ptr CosEvProxyPullConsumerRef;

  class CosEvProxyPullConsumer_Helper {
  public:
    typedef CosEvProxyPullConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_CosEvProxyPullConsumer, CosEvProxyPullConsumer_Helper> CosEvProxyPullConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_CosEvProxyPullConsumer,CosEvProxyPullConsumer_Helper > CosEvProxyPullConsumer_out;

#endif

  // interface CosEvProxyPullConsumer
  class CosEvProxyPullConsumer {
  public:
    // Declarations for this interface type.
    typedef CosEvProxyPullConsumer_ptr _ptr_type;
    typedef CosEvProxyPullConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_CosEvProxyPullConsumer :
    public virtual _objref_Interactive,
    public virtual CosEventChannelAdmin::_objref_ProxyPullConsumer
  {
  public:
    

    inline _objref_CosEvProxyPullConsumer()  { _PR_setobj(0); }  // nil
    _objref_CosEvProxyPullConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_CosEvProxyPullConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_CosEvProxyPullConsumer(const _objref_CosEvProxyPullConsumer&);
    _objref_CosEvProxyPullConsumer& operator = (const _objref_CosEvProxyPullConsumer&);
    // not implemented

    friend class CosEvProxyPullConsumer;
  };

  class _pof_CosEvProxyPullConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_CosEvProxyPullConsumer() : _OMNI_NS(proxyObjectFactory)(CosEvProxyPullConsumer::_PD_repoId) {}
    virtual ~_pof_CosEvProxyPullConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_CosEvProxyPullConsumer :
    public virtual _impl_Interactive,
    public virtual CosEventChannelAdmin::_impl_ProxyPullConsumer
  {
  public:
    virtual ~_impl_CosEvProxyPullConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_CosEvProxyPullConsumer;

#ifndef __AttNotification_mProxyPushSupplier__
#define __AttNotification_mProxyPushSupplier__

  class ProxyPushSupplier;
  class _objref_ProxyPushSupplier;
  class _impl_ProxyPushSupplier;
  
  typedef _objref_ProxyPushSupplier* ProxyPushSupplier_ptr;
  typedef ProxyPushSupplier_ptr ProxyPushSupplierRef;

  class ProxyPushSupplier_Helper {
  public:
    typedef ProxyPushSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ProxyPushSupplier, ProxyPushSupplier_Helper> ProxyPushSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ProxyPushSupplier,ProxyPushSupplier_Helper > ProxyPushSupplier_out;

#endif

  // interface ProxyPushSupplier
  class ProxyPushSupplier {
  public:
    // Declarations for this interface type.
    typedef ProxyPushSupplier_ptr _ptr_type;
    typedef ProxyPushSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ProxyPushSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_ProxyPushSupplier
  {
  public:
    

    inline _objref_ProxyPushSupplier()  { _PR_setobj(0); }  // nil
    _objref_ProxyPushSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ProxyPushSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ProxyPushSupplier(const _objref_ProxyPushSupplier&);
    _objref_ProxyPushSupplier& operator = (const _objref_ProxyPushSupplier&);
    // not implemented

    friend class ProxyPushSupplier;
  };

  class _pof_ProxyPushSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ProxyPushSupplier() : _OMNI_NS(proxyObjectFactory)(ProxyPushSupplier::_PD_repoId) {}
    virtual ~_pof_ProxyPushSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ProxyPushSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_ProxyPushSupplier
  {
  public:
    virtual ~_impl_ProxyPushSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ProxyPushSupplier;

#ifndef __AttNotification_mProxyPullSupplier__
#define __AttNotification_mProxyPullSupplier__

  class ProxyPullSupplier;
  class _objref_ProxyPullSupplier;
  class _impl_ProxyPullSupplier;
  
  typedef _objref_ProxyPullSupplier* ProxyPullSupplier_ptr;
  typedef ProxyPullSupplier_ptr ProxyPullSupplierRef;

  class ProxyPullSupplier_Helper {
  public:
    typedef ProxyPullSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ProxyPullSupplier, ProxyPullSupplier_Helper> ProxyPullSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ProxyPullSupplier,ProxyPullSupplier_Helper > ProxyPullSupplier_out;

#endif

  // interface ProxyPullSupplier
  class ProxyPullSupplier {
  public:
    // Declarations for this interface type.
    typedef ProxyPullSupplier_ptr _ptr_type;
    typedef ProxyPullSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ProxyPullSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_ProxyPullSupplier
  {
  public:
    

    inline _objref_ProxyPullSupplier()  { _PR_setobj(0); }  // nil
    _objref_ProxyPullSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ProxyPullSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ProxyPullSupplier(const _objref_ProxyPullSupplier&);
    _objref_ProxyPullSupplier& operator = (const _objref_ProxyPullSupplier&);
    // not implemented

    friend class ProxyPullSupplier;
  };

  class _pof_ProxyPullSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ProxyPullSupplier() : _OMNI_NS(proxyObjectFactory)(ProxyPullSupplier::_PD_repoId) {}
    virtual ~_pof_ProxyPullSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ProxyPullSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_ProxyPullSupplier
  {
  public:
    virtual ~_impl_ProxyPullSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ProxyPullSupplier;

#ifndef __AttNotification_mProxyPushConsumer__
#define __AttNotification_mProxyPushConsumer__

  class ProxyPushConsumer;
  class _objref_ProxyPushConsumer;
  class _impl_ProxyPushConsumer;
  
  typedef _objref_ProxyPushConsumer* ProxyPushConsumer_ptr;
  typedef ProxyPushConsumer_ptr ProxyPushConsumerRef;

  class ProxyPushConsumer_Helper {
  public:
    typedef ProxyPushConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ProxyPushConsumer, ProxyPushConsumer_Helper> ProxyPushConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ProxyPushConsumer,ProxyPushConsumer_Helper > ProxyPushConsumer_out;

#endif

  // interface ProxyPushConsumer
  class ProxyPushConsumer {
  public:
    // Declarations for this interface type.
    typedef ProxyPushConsumer_ptr _ptr_type;
    typedef ProxyPushConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ProxyPushConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_ProxyPushConsumer
  {
  public:
    

    inline _objref_ProxyPushConsumer()  { _PR_setobj(0); }  // nil
    _objref_ProxyPushConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ProxyPushConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ProxyPushConsumer(const _objref_ProxyPushConsumer&);
    _objref_ProxyPushConsumer& operator = (const _objref_ProxyPushConsumer&);
    // not implemented

    friend class ProxyPushConsumer;
  };

  class _pof_ProxyPushConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ProxyPushConsumer() : _OMNI_NS(proxyObjectFactory)(ProxyPushConsumer::_PD_repoId) {}
    virtual ~_pof_ProxyPushConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ProxyPushConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_ProxyPushConsumer
  {
  public:
    virtual ~_impl_ProxyPushConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ProxyPushConsumer;

#ifndef __AttNotification_mProxyPullConsumer__
#define __AttNotification_mProxyPullConsumer__

  class ProxyPullConsumer;
  class _objref_ProxyPullConsumer;
  class _impl_ProxyPullConsumer;
  
  typedef _objref_ProxyPullConsumer* ProxyPullConsumer_ptr;
  typedef ProxyPullConsumer_ptr ProxyPullConsumerRef;

  class ProxyPullConsumer_Helper {
  public:
    typedef ProxyPullConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ProxyPullConsumer, ProxyPullConsumer_Helper> ProxyPullConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ProxyPullConsumer,ProxyPullConsumer_Helper > ProxyPullConsumer_out;

#endif

  // interface ProxyPullConsumer
  class ProxyPullConsumer {
  public:
    // Declarations for this interface type.
    typedef ProxyPullConsumer_ptr _ptr_type;
    typedef ProxyPullConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ProxyPullConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_ProxyPullConsumer
  {
  public:
    

    inline _objref_ProxyPullConsumer()  { _PR_setobj(0); }  // nil
    _objref_ProxyPullConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ProxyPullConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ProxyPullConsumer(const _objref_ProxyPullConsumer&);
    _objref_ProxyPullConsumer& operator = (const _objref_ProxyPullConsumer&);
    // not implemented

    friend class ProxyPullConsumer;
  };

  class _pof_ProxyPullConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ProxyPullConsumer() : _OMNI_NS(proxyObjectFactory)(ProxyPullConsumer::_PD_repoId) {}
    virtual ~_pof_ProxyPullConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ProxyPullConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_ProxyPullConsumer
  {
  public:
    virtual ~_impl_ProxyPullConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ProxyPullConsumer;

#ifndef __AttNotification_mStructuredProxyPushSupplier__
#define __AttNotification_mStructuredProxyPushSupplier__

  class StructuredProxyPushSupplier;
  class _objref_StructuredProxyPushSupplier;
  class _impl_StructuredProxyPushSupplier;
  
  typedef _objref_StructuredProxyPushSupplier* StructuredProxyPushSupplier_ptr;
  typedef StructuredProxyPushSupplier_ptr StructuredProxyPushSupplierRef;

  class StructuredProxyPushSupplier_Helper {
  public:
    typedef StructuredProxyPushSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_StructuredProxyPushSupplier, StructuredProxyPushSupplier_Helper> StructuredProxyPushSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_StructuredProxyPushSupplier,StructuredProxyPushSupplier_Helper > StructuredProxyPushSupplier_out;

#endif

  // interface StructuredProxyPushSupplier
  class StructuredProxyPushSupplier {
  public:
    // Declarations for this interface type.
    typedef StructuredProxyPushSupplier_ptr _ptr_type;
    typedef StructuredProxyPushSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_StructuredProxyPushSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_StructuredProxyPushSupplier
  {
  public:
    

    inline _objref_StructuredProxyPushSupplier()  { _PR_setobj(0); }  // nil
    _objref_StructuredProxyPushSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_StructuredProxyPushSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_StructuredProxyPushSupplier(const _objref_StructuredProxyPushSupplier&);
    _objref_StructuredProxyPushSupplier& operator = (const _objref_StructuredProxyPushSupplier&);
    // not implemented

    friend class StructuredProxyPushSupplier;
  };

  class _pof_StructuredProxyPushSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_StructuredProxyPushSupplier() : _OMNI_NS(proxyObjectFactory)(StructuredProxyPushSupplier::_PD_repoId) {}
    virtual ~_pof_StructuredProxyPushSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_StructuredProxyPushSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_StructuredProxyPushSupplier
  {
  public:
    virtual ~_impl_StructuredProxyPushSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StructuredProxyPushSupplier;

#ifndef __AttNotification_mStructuredProxyPullSupplier__
#define __AttNotification_mStructuredProxyPullSupplier__

  class StructuredProxyPullSupplier;
  class _objref_StructuredProxyPullSupplier;
  class _impl_StructuredProxyPullSupplier;
  
  typedef _objref_StructuredProxyPullSupplier* StructuredProxyPullSupplier_ptr;
  typedef StructuredProxyPullSupplier_ptr StructuredProxyPullSupplierRef;

  class StructuredProxyPullSupplier_Helper {
  public:
    typedef StructuredProxyPullSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_StructuredProxyPullSupplier, StructuredProxyPullSupplier_Helper> StructuredProxyPullSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_StructuredProxyPullSupplier,StructuredProxyPullSupplier_Helper > StructuredProxyPullSupplier_out;

#endif

  // interface StructuredProxyPullSupplier
  class StructuredProxyPullSupplier {
  public:
    // Declarations for this interface type.
    typedef StructuredProxyPullSupplier_ptr _ptr_type;
    typedef StructuredProxyPullSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_StructuredProxyPullSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_StructuredProxyPullSupplier
  {
  public:
    

    inline _objref_StructuredProxyPullSupplier()  { _PR_setobj(0); }  // nil
    _objref_StructuredProxyPullSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_StructuredProxyPullSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_StructuredProxyPullSupplier(const _objref_StructuredProxyPullSupplier&);
    _objref_StructuredProxyPullSupplier& operator = (const _objref_StructuredProxyPullSupplier&);
    // not implemented

    friend class StructuredProxyPullSupplier;
  };

  class _pof_StructuredProxyPullSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_StructuredProxyPullSupplier() : _OMNI_NS(proxyObjectFactory)(StructuredProxyPullSupplier::_PD_repoId) {}
    virtual ~_pof_StructuredProxyPullSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_StructuredProxyPullSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_StructuredProxyPullSupplier
  {
  public:
    virtual ~_impl_StructuredProxyPullSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StructuredProxyPullSupplier;

#ifndef __AttNotification_mStructuredProxyPushConsumer__
#define __AttNotification_mStructuredProxyPushConsumer__

  class StructuredProxyPushConsumer;
  class _objref_StructuredProxyPushConsumer;
  class _impl_StructuredProxyPushConsumer;
  
  typedef _objref_StructuredProxyPushConsumer* StructuredProxyPushConsumer_ptr;
  typedef StructuredProxyPushConsumer_ptr StructuredProxyPushConsumerRef;

  class StructuredProxyPushConsumer_Helper {
  public:
    typedef StructuredProxyPushConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_StructuredProxyPushConsumer, StructuredProxyPushConsumer_Helper> StructuredProxyPushConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_StructuredProxyPushConsumer,StructuredProxyPushConsumer_Helper > StructuredProxyPushConsumer_out;

#endif

  // interface StructuredProxyPushConsumer
  class StructuredProxyPushConsumer {
  public:
    // Declarations for this interface type.
    typedef StructuredProxyPushConsumer_ptr _ptr_type;
    typedef StructuredProxyPushConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_StructuredProxyPushConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_StructuredProxyPushConsumer
  {
  public:
    

    inline _objref_StructuredProxyPushConsumer()  { _PR_setobj(0); }  // nil
    _objref_StructuredProxyPushConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_StructuredProxyPushConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_StructuredProxyPushConsumer(const _objref_StructuredProxyPushConsumer&);
    _objref_StructuredProxyPushConsumer& operator = (const _objref_StructuredProxyPushConsumer&);
    // not implemented

    friend class StructuredProxyPushConsumer;
  };

  class _pof_StructuredProxyPushConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_StructuredProxyPushConsumer() : _OMNI_NS(proxyObjectFactory)(StructuredProxyPushConsumer::_PD_repoId) {}
    virtual ~_pof_StructuredProxyPushConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_StructuredProxyPushConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_StructuredProxyPushConsumer
  {
  public:
    virtual ~_impl_StructuredProxyPushConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StructuredProxyPushConsumer;

#ifndef __AttNotification_mStructuredProxyPullConsumer__
#define __AttNotification_mStructuredProxyPullConsumer__

  class StructuredProxyPullConsumer;
  class _objref_StructuredProxyPullConsumer;
  class _impl_StructuredProxyPullConsumer;
  
  typedef _objref_StructuredProxyPullConsumer* StructuredProxyPullConsumer_ptr;
  typedef StructuredProxyPullConsumer_ptr StructuredProxyPullConsumerRef;

  class StructuredProxyPullConsumer_Helper {
  public:
    typedef StructuredProxyPullConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_StructuredProxyPullConsumer, StructuredProxyPullConsumer_Helper> StructuredProxyPullConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_StructuredProxyPullConsumer,StructuredProxyPullConsumer_Helper > StructuredProxyPullConsumer_out;

#endif

  // interface StructuredProxyPullConsumer
  class StructuredProxyPullConsumer {
  public:
    // Declarations for this interface type.
    typedef StructuredProxyPullConsumer_ptr _ptr_type;
    typedef StructuredProxyPullConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_StructuredProxyPullConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_StructuredProxyPullConsumer
  {
  public:
    

    inline _objref_StructuredProxyPullConsumer()  { _PR_setobj(0); }  // nil
    _objref_StructuredProxyPullConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_StructuredProxyPullConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_StructuredProxyPullConsumer(const _objref_StructuredProxyPullConsumer&);
    _objref_StructuredProxyPullConsumer& operator = (const _objref_StructuredProxyPullConsumer&);
    // not implemented

    friend class StructuredProxyPullConsumer;
  };

  class _pof_StructuredProxyPullConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_StructuredProxyPullConsumer() : _OMNI_NS(proxyObjectFactory)(StructuredProxyPullConsumer::_PD_repoId) {}
    virtual ~_pof_StructuredProxyPullConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_StructuredProxyPullConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_StructuredProxyPullConsumer
  {
  public:
    virtual ~_impl_StructuredProxyPullConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_StructuredProxyPullConsumer;

#ifndef __AttNotification_mSequenceProxyPushSupplier__
#define __AttNotification_mSequenceProxyPushSupplier__

  class SequenceProxyPushSupplier;
  class _objref_SequenceProxyPushSupplier;
  class _impl_SequenceProxyPushSupplier;
  
  typedef _objref_SequenceProxyPushSupplier* SequenceProxyPushSupplier_ptr;
  typedef SequenceProxyPushSupplier_ptr SequenceProxyPushSupplierRef;

  class SequenceProxyPushSupplier_Helper {
  public:
    typedef SequenceProxyPushSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_SequenceProxyPushSupplier, SequenceProxyPushSupplier_Helper> SequenceProxyPushSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_SequenceProxyPushSupplier,SequenceProxyPushSupplier_Helper > SequenceProxyPushSupplier_out;

#endif

  // interface SequenceProxyPushSupplier
  class SequenceProxyPushSupplier {
  public:
    // Declarations for this interface type.
    typedef SequenceProxyPushSupplier_ptr _ptr_type;
    typedef SequenceProxyPushSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_SequenceProxyPushSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_SequenceProxyPushSupplier
  {
  public:
    

    inline _objref_SequenceProxyPushSupplier()  { _PR_setobj(0); }  // nil
    _objref_SequenceProxyPushSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_SequenceProxyPushSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_SequenceProxyPushSupplier(const _objref_SequenceProxyPushSupplier&);
    _objref_SequenceProxyPushSupplier& operator = (const _objref_SequenceProxyPushSupplier&);
    // not implemented

    friend class SequenceProxyPushSupplier;
  };

  class _pof_SequenceProxyPushSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_SequenceProxyPushSupplier() : _OMNI_NS(proxyObjectFactory)(SequenceProxyPushSupplier::_PD_repoId) {}
    virtual ~_pof_SequenceProxyPushSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_SequenceProxyPushSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_SequenceProxyPushSupplier
  {
  public:
    virtual ~_impl_SequenceProxyPushSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SequenceProxyPushSupplier;

#ifndef __AttNotification_mSequenceProxyPullSupplier__
#define __AttNotification_mSequenceProxyPullSupplier__

  class SequenceProxyPullSupplier;
  class _objref_SequenceProxyPullSupplier;
  class _impl_SequenceProxyPullSupplier;
  
  typedef _objref_SequenceProxyPullSupplier* SequenceProxyPullSupplier_ptr;
  typedef SequenceProxyPullSupplier_ptr SequenceProxyPullSupplierRef;

  class SequenceProxyPullSupplier_Helper {
  public:
    typedef SequenceProxyPullSupplier_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_SequenceProxyPullSupplier, SequenceProxyPullSupplier_Helper> SequenceProxyPullSupplier_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_SequenceProxyPullSupplier,SequenceProxyPullSupplier_Helper > SequenceProxyPullSupplier_out;

#endif

  // interface SequenceProxyPullSupplier
  class SequenceProxyPullSupplier {
  public:
    // Declarations for this interface type.
    typedef SequenceProxyPullSupplier_ptr _ptr_type;
    typedef SequenceProxyPullSupplier_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_SequenceProxyPullSupplier :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_SequenceProxyPullSupplier
  {
  public:
    

    inline _objref_SequenceProxyPullSupplier()  { _PR_setobj(0); }  // nil
    _objref_SequenceProxyPullSupplier(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_SequenceProxyPullSupplier();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_SequenceProxyPullSupplier(const _objref_SequenceProxyPullSupplier&);
    _objref_SequenceProxyPullSupplier& operator = (const _objref_SequenceProxyPullSupplier&);
    // not implemented

    friend class SequenceProxyPullSupplier;
  };

  class _pof_SequenceProxyPullSupplier : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_SequenceProxyPullSupplier() : _OMNI_NS(proxyObjectFactory)(SequenceProxyPullSupplier::_PD_repoId) {}
    virtual ~_pof_SequenceProxyPullSupplier();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_SequenceProxyPullSupplier :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_SequenceProxyPullSupplier
  {
  public:
    virtual ~_impl_SequenceProxyPullSupplier();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SequenceProxyPullSupplier;

#ifndef __AttNotification_mSequenceProxyPushConsumer__
#define __AttNotification_mSequenceProxyPushConsumer__

  class SequenceProxyPushConsumer;
  class _objref_SequenceProxyPushConsumer;
  class _impl_SequenceProxyPushConsumer;
  
  typedef _objref_SequenceProxyPushConsumer* SequenceProxyPushConsumer_ptr;
  typedef SequenceProxyPushConsumer_ptr SequenceProxyPushConsumerRef;

  class SequenceProxyPushConsumer_Helper {
  public:
    typedef SequenceProxyPushConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_SequenceProxyPushConsumer, SequenceProxyPushConsumer_Helper> SequenceProxyPushConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_SequenceProxyPushConsumer,SequenceProxyPushConsumer_Helper > SequenceProxyPushConsumer_out;

#endif

  // interface SequenceProxyPushConsumer
  class SequenceProxyPushConsumer {
  public:
    // Declarations for this interface type.
    typedef SequenceProxyPushConsumer_ptr _ptr_type;
    typedef SequenceProxyPushConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_SequenceProxyPushConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_SequenceProxyPushConsumer
  {
  public:
    

    inline _objref_SequenceProxyPushConsumer()  { _PR_setobj(0); }  // nil
    _objref_SequenceProxyPushConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_SequenceProxyPushConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_SequenceProxyPushConsumer(const _objref_SequenceProxyPushConsumer&);
    _objref_SequenceProxyPushConsumer& operator = (const _objref_SequenceProxyPushConsumer&);
    // not implemented

    friend class SequenceProxyPushConsumer;
  };

  class _pof_SequenceProxyPushConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_SequenceProxyPushConsumer() : _OMNI_NS(proxyObjectFactory)(SequenceProxyPushConsumer::_PD_repoId) {}
    virtual ~_pof_SequenceProxyPushConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_SequenceProxyPushConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_SequenceProxyPushConsumer
  {
  public:
    virtual ~_impl_SequenceProxyPushConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SequenceProxyPushConsumer;

#ifndef __AttNotification_mSequenceProxyPullConsumer__
#define __AttNotification_mSequenceProxyPullConsumer__

  class SequenceProxyPullConsumer;
  class _objref_SequenceProxyPullConsumer;
  class _impl_SequenceProxyPullConsumer;
  
  typedef _objref_SequenceProxyPullConsumer* SequenceProxyPullConsumer_ptr;
  typedef SequenceProxyPullConsumer_ptr SequenceProxyPullConsumerRef;

  class SequenceProxyPullConsumer_Helper {
  public:
    typedef SequenceProxyPullConsumer_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_SequenceProxyPullConsumer, SequenceProxyPullConsumer_Helper> SequenceProxyPullConsumer_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_SequenceProxyPullConsumer,SequenceProxyPullConsumer_Helper > SequenceProxyPullConsumer_out;

#endif

  // interface SequenceProxyPullConsumer
  class SequenceProxyPullConsumer {
  public:
    // Declarations for this interface type.
    typedef SequenceProxyPullConsumer_ptr _ptr_type;
    typedef SequenceProxyPullConsumer_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_SequenceProxyPullConsumer :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_SequenceProxyPullConsumer
  {
  public:
    

    inline _objref_SequenceProxyPullConsumer()  { _PR_setobj(0); }  // nil
    _objref_SequenceProxyPullConsumer(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_SequenceProxyPullConsumer();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_SequenceProxyPullConsumer(const _objref_SequenceProxyPullConsumer&);
    _objref_SequenceProxyPullConsumer& operator = (const _objref_SequenceProxyPullConsumer&);
    // not implemented

    friend class SequenceProxyPullConsumer;
  };

  class _pof_SequenceProxyPullConsumer : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_SequenceProxyPullConsumer() : _OMNI_NS(proxyObjectFactory)(SequenceProxyPullConsumer::_PD_repoId) {}
    virtual ~_pof_SequenceProxyPullConsumer();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_SequenceProxyPullConsumer :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_SequenceProxyPullConsumer
  {
  public:
    virtual ~_impl_SequenceProxyPullConsumer();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SequenceProxyPullConsumer;

#ifndef __AttNotification_mSupplierAdmin__
#define __AttNotification_mSupplierAdmin__

  class SupplierAdmin;
  class _objref_SupplierAdmin;
  class _impl_SupplierAdmin;
  
  typedef _objref_SupplierAdmin* SupplierAdmin_ptr;
  typedef SupplierAdmin_ptr SupplierAdminRef;

  class SupplierAdmin_Helper {
  public:
    typedef SupplierAdmin_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_SupplierAdmin, SupplierAdmin_Helper> SupplierAdmin_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_SupplierAdmin,SupplierAdmin_Helper > SupplierAdmin_out;

#endif

  // interface SupplierAdmin
  class SupplierAdmin {
  public:
    // Declarations for this interface type.
    typedef SupplierAdmin_ptr _ptr_type;
    typedef SupplierAdmin_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_SupplierAdmin :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_SupplierAdmin
  {
  public:
    

    inline _objref_SupplierAdmin()  { _PR_setobj(0); }  // nil
    _objref_SupplierAdmin(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_SupplierAdmin();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_SupplierAdmin(const _objref_SupplierAdmin&);
    _objref_SupplierAdmin& operator = (const _objref_SupplierAdmin&);
    // not implemented

    friend class SupplierAdmin;
  };

  class _pof_SupplierAdmin : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_SupplierAdmin() : _OMNI_NS(proxyObjectFactory)(SupplierAdmin::_PD_repoId) {}
    virtual ~_pof_SupplierAdmin();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_SupplierAdmin :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_SupplierAdmin
  {
  public:
    virtual ~_impl_SupplierAdmin();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_SupplierAdmin;

#ifndef __AttNotification_mConsumerAdmin__
#define __AttNotification_mConsumerAdmin__

  class ConsumerAdmin;
  class _objref_ConsumerAdmin;
  class _impl_ConsumerAdmin;
  
  typedef _objref_ConsumerAdmin* ConsumerAdmin_ptr;
  typedef ConsumerAdmin_ptr ConsumerAdminRef;

  class ConsumerAdmin_Helper {
  public:
    typedef ConsumerAdmin_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_ConsumerAdmin, ConsumerAdmin_Helper> ConsumerAdmin_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_ConsumerAdmin,ConsumerAdmin_Helper > ConsumerAdmin_out;

#endif

  // interface ConsumerAdmin
  class ConsumerAdmin {
  public:
    // Declarations for this interface type.
    typedef ConsumerAdmin_ptr _ptr_type;
    typedef ConsumerAdmin_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_ConsumerAdmin :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_ConsumerAdmin
  {
  public:
    

    inline _objref_ConsumerAdmin()  { _PR_setobj(0); }  // nil
    _objref_ConsumerAdmin(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_ConsumerAdmin();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_ConsumerAdmin(const _objref_ConsumerAdmin&);
    _objref_ConsumerAdmin& operator = (const _objref_ConsumerAdmin&);
    // not implemented

    friend class ConsumerAdmin;
  };

  class _pof_ConsumerAdmin : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_ConsumerAdmin() : _OMNI_NS(proxyObjectFactory)(ConsumerAdmin::_PD_repoId) {}
    virtual ~_pof_ConsumerAdmin();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_ConsumerAdmin :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_ConsumerAdmin
  {
  public:
    virtual ~_impl_ConsumerAdmin();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ConsumerAdmin;

  struct ChannelStats {
    typedef _CORBA_ConstrType_Fix_Var<ChannelStats> _var_type;

    
    ::CORBA::Long num_announcements;

    ::CORBA::Long num_notifications;

  

    void operator>>= (cdrStream &) const;
    void operator<<= (cdrStream &);
  };

  typedef ChannelStats::_var_type ChannelStats_var;

  typedef ChannelStats& ChannelStats_out;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ChannelStats;

#ifndef __AttNotification_mEventChannel__
#define __AttNotification_mEventChannel__

  class EventChannel;
  class _objref_EventChannel;
  class _impl_EventChannel;
  
  typedef _objref_EventChannel* EventChannel_ptr;
  typedef EventChannel_ptr EventChannelRef;

  class EventChannel_Helper {
  public:
    typedef EventChannel_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_EventChannel, EventChannel_Helper> EventChannel_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_EventChannel,EventChannel_Helper > EventChannel_out;

#endif

  // interface EventChannel
  class EventChannel {
  public:
    // Declarations for this interface type.
    typedef EventChannel_ptr _ptr_type;
    typedef EventChannel_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_EventChannel :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_EventChannel
  {
  public:
    CosNotification::EventTypeSeq* obtain_subscription_types();
    CosNotification::EventTypeSeq* obtain_offered_types();
    ChannelStats obtain_stats();

    inline _objref_EventChannel()  { _PR_setobj(0); }  // nil
    _objref_EventChannel(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_EventChannel();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_EventChannel(const _objref_EventChannel&);
    _objref_EventChannel& operator = (const _objref_EventChannel&);
    // not implemented

    friend class EventChannel;
  };

  class _pof_EventChannel : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_EventChannel() : _OMNI_NS(proxyObjectFactory)(EventChannel::_PD_repoId) {}
    virtual ~_pof_EventChannel();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_EventChannel :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_EventChannel
  {
  public:
    virtual ~_impl_EventChannel();

    virtual CosNotification::EventTypeSeq* obtain_subscription_types() = 0;
    virtual CosNotification::EventTypeSeq* obtain_offered_types() = 0;
    virtual ChannelStats obtain_stats() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_EventChannel;

#ifndef __AttNotification_mEventChannelFactory__
#define __AttNotification_mEventChannelFactory__

  class EventChannelFactory;
  class _objref_EventChannelFactory;
  class _impl_EventChannelFactory;
  
  typedef _objref_EventChannelFactory* EventChannelFactory_ptr;
  typedef EventChannelFactory_ptr EventChannelFactoryRef;

  class EventChannelFactory_Helper {
  public:
    typedef EventChannelFactory_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_EventChannelFactory, EventChannelFactory_Helper> EventChannelFactory_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_EventChannelFactory,EventChannelFactory_Helper > EventChannelFactory_out;

#endif

  // interface EventChannelFactory
  class EventChannelFactory {
  public:
    // Declarations for this interface type.
    typedef EventChannelFactory_ptr _ptr_type;
    typedef EventChannelFactory_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_EventChannelFactory :
    public virtual _objref_Interactive,
    public virtual CosNotifyChannelAdmin::_objref_EventChannelFactory,
    public virtual CosNotification::_objref_QoSAdmin,
    public virtual CosNotification::_objref_AdminPropertiesAdmin
  {
  public:
    

    inline _objref_EventChannelFactory()  { _PR_setobj(0); }  // nil
    _objref_EventChannelFactory(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_EventChannelFactory();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_EventChannelFactory(const _objref_EventChannelFactory&);
    _objref_EventChannelFactory& operator = (const _objref_EventChannelFactory&);
    // not implemented

    friend class EventChannelFactory;
  };

  class _pof_EventChannelFactory : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_EventChannelFactory() : _OMNI_NS(proxyObjectFactory)(EventChannelFactory::_PD_repoId) {}
    virtual ~_pof_EventChannelFactory();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_EventChannelFactory :
    public virtual _impl_Interactive,
    public virtual CosNotifyChannelAdmin::_impl_EventChannelFactory,
    public virtual CosNotification::_impl_QoSAdmin,
    public virtual CosNotification::_impl_AdminPropertiesAdmin
  {
  public:
    virtual ~_impl_EventChannelFactory();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_EventChannelFactory;

#ifndef __AttNotification_mFilter__
#define __AttNotification_mFilter__

  class Filter;
  class _objref_Filter;
  class _impl_Filter;
  
  typedef _objref_Filter* Filter_ptr;
  typedef Filter_ptr FilterRef;

  class Filter_Helper {
  public:
    typedef Filter_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Filter, Filter_Helper> Filter_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Filter,Filter_Helper > Filter_out;

#endif

  // interface Filter
  class Filter {
  public:
    // Declarations for this interface type.
    typedef Filter_ptr _ptr_type;
    typedef Filter_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_Filter :
    public virtual _objref_Interactive,
    public virtual CosNotifyFilter::_objref_Filter
  {
  public:
    CosNotifyFilter::FilterID MyFID();

    inline _objref_Filter()  { _PR_setobj(0); }  // nil
    _objref_Filter(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_Filter();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_Filter(const _objref_Filter&);
    _objref_Filter& operator = (const _objref_Filter&);
    // not implemented

    friend class Filter;
  };

  class _pof_Filter : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_Filter() : _OMNI_NS(proxyObjectFactory)(Filter::_PD_repoId) {}
    virtual ~_pof_Filter();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_Filter :
    public virtual _impl_Interactive,
    public virtual CosNotifyFilter::_impl_Filter
  {
  public:
    virtual ~_impl_Filter();

    virtual CosNotifyFilter::FilterID MyFID() = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Filter;

#ifndef __AttNotification_mMappingFilter__
#define __AttNotification_mMappingFilter__

  class MappingFilter;
  class _objref_MappingFilter;
  class _impl_MappingFilter;
  
  typedef _objref_MappingFilter* MappingFilter_ptr;
  typedef MappingFilter_ptr MappingFilterRef;

  class MappingFilter_Helper {
  public:
    typedef MappingFilter_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_MappingFilter, MappingFilter_Helper> MappingFilter_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_MappingFilter,MappingFilter_Helper > MappingFilter_out;

#endif

  // interface MappingFilter
  class MappingFilter {
  public:
    // Declarations for this interface type.
    typedef MappingFilter_ptr _ptr_type;
    typedef MappingFilter_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_MappingFilter :
    public virtual _objref_Interactive,
    public virtual CosNotifyFilter::_objref_MappingFilter
  {
  public:
    

    inline _objref_MappingFilter()  { _PR_setobj(0); }  // nil
    _objref_MappingFilter(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_MappingFilter();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_MappingFilter(const _objref_MappingFilter&);
    _objref_MappingFilter& operator = (const _objref_MappingFilter&);
    // not implemented

    friend class MappingFilter;
  };

  class _pof_MappingFilter : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_MappingFilter() : _OMNI_NS(proxyObjectFactory)(MappingFilter::_PD_repoId) {}
    virtual ~_pof_MappingFilter();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_MappingFilter :
    public virtual _impl_Interactive,
    public virtual CosNotifyFilter::_impl_MappingFilter
  {
  public:
    virtual ~_impl_MappingFilter();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_MappingFilter;

#ifndef __AttNotification_mFilterFactory__
#define __AttNotification_mFilterFactory__

  class FilterFactory;
  class _objref_FilterFactory;
  class _impl_FilterFactory;
  
  typedef _objref_FilterFactory* FilterFactory_ptr;
  typedef FilterFactory_ptr FilterFactoryRef;

  class FilterFactory_Helper {
  public:
    typedef FilterFactory_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_FilterFactory, FilterFactory_Helper> FilterFactory_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_FilterFactory,FilterFactory_Helper > FilterFactory_out;

#endif

  // interface FilterFactory
  class FilterFactory {
  public:
    // Declarations for this interface type.
    typedef FilterFactory_ptr _ptr_type;
    typedef FilterFactory_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_FilterFactory :
    public virtual _objref_Interactive,
    public virtual CosNotifyFilter::_objref_FilterFactory
  {
  public:
    

    inline _objref_FilterFactory()  { _PR_setobj(0); }  // nil
    _objref_FilterFactory(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_FilterFactory();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_FilterFactory(const _objref_FilterFactory&);
    _objref_FilterFactory& operator = (const _objref_FilterFactory&);
    // not implemented

    friend class FilterFactory;
  };

  class _pof_FilterFactory : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_FilterFactory() : _OMNI_NS(proxyObjectFactory)(FilterFactory::_PD_repoId) {}
    virtual ~_pof_FilterFactory();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_FilterFactory :
    public virtual _impl_Interactive,
    public virtual CosNotifyFilter::_impl_FilterFactory
  {
  public:
    virtual ~_impl_FilterFactory();

    
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_FilterFactory;

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_ServerProperties;

  typedef CosNotification::PropertySeq ServerProperties;
  typedef CosNotification::PropertySeq_var ServerProperties_var;
  typedef CosNotification::PropertySeq_out ServerProperties_out;

  class UnsupportedServerProp : public ::CORBA::UserException {
  public:
    
    CosNotification::PropertyErrorSeq server_prop_err;

  

    inline UnsupportedServerProp() {
      pd_insertToAnyFn    = insertToAnyFn;
      pd_insertToAnyFnNCP = insertToAnyFnNCP;
    }
    UnsupportedServerProp(const UnsupportedServerProp&);
    UnsupportedServerProp(const CosNotification::PropertyErrorSeq i_server_prop_err);
    UnsupportedServerProp& operator=(const UnsupportedServerProp&);
    virtual ~UnsupportedServerProp();
    virtual void _raise() const;
    static UnsupportedServerProp* _downcast(::CORBA::Exception*);
    static const UnsupportedServerProp* _downcast(const ::CORBA::Exception*);
    static inline UnsupportedServerProp* _narrow(::CORBA::Exception* _e) {
      return _downcast(_e);
    }
    
    void operator>>=(cdrStream&) const ;
    void operator<<=(cdrStream&) ;

    static _core_attr insertExceptionToAny    insertToAnyFn;
    static _core_attr insertExceptionToAnyNCP insertToAnyFnNCP;

    virtual ::CORBA::Exception* _NP_duplicate() const;

    static _core_attr const char* _PD_repoId;
    static _core_attr const char* _PD_typeId;

  private:
    virtual const char* _NP_typeId() const;
    virtual const char* _NP_repoId(int*) const;
    virtual void _NP_marshal(cdrStream&) const;
  };

  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_UnsupportedServerProp;

#ifndef __AttNotification_mServer__
#define __AttNotification_mServer__

  class Server;
  class _objref_Server;
  class _impl_Server;
  
  typedef _objref_Server* Server_ptr;
  typedef Server_ptr ServerRef;

  class Server_Helper {
  public:
    typedef Server_ptr _ptr_type;

    static _ptr_type _nil();
    static _CORBA_Boolean is_nil(_ptr_type);
    static void release(_ptr_type);
    static void duplicate(_ptr_type);
    static void marshalObjRef(_ptr_type, cdrStream&);
    static _ptr_type unmarshalObjRef(cdrStream&);
  };

  typedef _CORBA_ObjRef_Var<_objref_Server, Server_Helper> Server_var;
  typedef _CORBA_ObjRef_OUT_arg<_objref_Server,Server_Helper > Server_out;

#endif

  // interface Server
  class Server {
  public:
    // Declarations for this interface type.
    typedef Server_ptr _ptr_type;
    typedef Server_var _var_type;

    static _ptr_type _duplicate(_ptr_type);
    static _ptr_type _narrow(::CORBA::Object_ptr);
    static _ptr_type _unchecked_narrow(::CORBA::Object_ptr);
    
    static _ptr_type _nil();

    static inline void _marshalObjRef(_ptr_type, cdrStream&);

    static inline _ptr_type _unmarshalObjRef(cdrStream& s) {
      omniObjRef* o = omniObjRef::_unMarshal(_PD_repoId,s);
      if (o)
        return (_ptr_type) o->_ptrToObjRef(_PD_repoId);
      else
        return _nil();
    }

    static _core_attr const char* _PD_repoId;

    // Other IDL defined within this scope.
    
  };

  class _objref_Server :
    public virtual _objref_Interactive
  {
  public:
    void destroy();
    FilterFactory_ptr get_filter_factory();
    EventChannelFactory_ptr get_channel_factory();
    EventChannel_ptr get_default_channel();
    ::CORBA::Boolean results_to_file();
    ServerProperties* get_server_props();
    void set_server_props(const ::AttNotification::ServerProperties& props);

    inline _objref_Server()  { _PR_setobj(0); }  // nil
    _objref_Server(omniIOR*, omniIdentity*);

  protected:
    virtual ~_objref_Server();

    
  private:
    virtual void* _ptrToObjRef(const char*);

    _objref_Server(const _objref_Server&);
    _objref_Server& operator = (const _objref_Server&);
    // not implemented

    friend class Server;
  };

  class _pof_Server : public _OMNI_NS(proxyObjectFactory) {
  public:
    inline _pof_Server() : _OMNI_NS(proxyObjectFactory)(Server::_PD_repoId) {}
    virtual ~_pof_Server();

    virtual omniObjRef* newObjRef(omniIOR*,omniIdentity*);
    virtual _CORBA_Boolean is_a(const char*) const;
  };

  class _impl_Server :
    public virtual _impl_Interactive
  {
  public:
    virtual ~_impl_Server();

    virtual void destroy() = 0;
    virtual FilterFactory_ptr get_filter_factory() = 0;
    virtual EventChannelFactory_ptr get_channel_factory() = 0;
    virtual EventChannel_ptr get_default_channel() = 0;
    virtual ::CORBA::Boolean results_to_file() = 0;
    virtual ServerProperties* get_server_props() = 0;
    virtual void set_server_props(const ::AttNotification::ServerProperties& props) = 0;
    
  public:  // Really protected, workaround for xlC
    virtual _CORBA_Boolean _dispatch(omniCallHandle&);

  private:
    virtual void* _ptrToInterface(const char*);
    virtual const char* _mostDerivedRepoId();
    
  };


  _CORBA_MODULE_VAR _dyn_attr const ::CORBA::TypeCode_ptr _tc_Server;

_CORBA_MODULE_END



_CORBA_MODULE POA_AttNotification
_CORBA_MODULE_BEG

  class Interactive :
    public virtual AttNotification::_impl_Interactive,
    public virtual ::PortableServer::ServantBase
  {
  public:
    virtual ~Interactive();

    inline ::AttNotification::Interactive_ptr _this() {
      return (::AttNotification::Interactive_ptr) _do_this(::AttNotification::Interactive::_PD_repoId);
    }
  };

  class CosEvProxyPushSupplier :
    public virtual AttNotification::_impl_CosEvProxyPushSupplier,
    public virtual Interactive,
      public virtual POA_CosEventChannelAdmin::ProxyPushSupplier
  {
  public:
    virtual ~CosEvProxyPushSupplier();

    inline ::AttNotification::CosEvProxyPushSupplier_ptr _this() {
      return (::AttNotification::CosEvProxyPushSupplier_ptr) _do_this(::AttNotification::CosEvProxyPushSupplier::_PD_repoId);
    }
  };

  class CosEvProxyPullSupplier :
    public virtual AttNotification::_impl_CosEvProxyPullSupplier,
    public virtual Interactive,
      public virtual POA_CosEventChannelAdmin::ProxyPullSupplier
  {
  public:
    virtual ~CosEvProxyPullSupplier();

    inline ::AttNotification::CosEvProxyPullSupplier_ptr _this() {
      return (::AttNotification::CosEvProxyPullSupplier_ptr) _do_this(::AttNotification::CosEvProxyPullSupplier::_PD_repoId);
    }
  };

  class CosEvProxyPushConsumer :
    public virtual AttNotification::_impl_CosEvProxyPushConsumer,
    public virtual Interactive,
      public virtual POA_CosEventChannelAdmin::ProxyPushConsumer
  {
  public:
    virtual ~CosEvProxyPushConsumer();

    inline ::AttNotification::CosEvProxyPushConsumer_ptr _this() {
      return (::AttNotification::CosEvProxyPushConsumer_ptr) _do_this(::AttNotification::CosEvProxyPushConsumer::_PD_repoId);
    }
  };

  class CosEvProxyPullConsumer :
    public virtual AttNotification::_impl_CosEvProxyPullConsumer,
    public virtual Interactive,
      public virtual POA_CosEventChannelAdmin::ProxyPullConsumer
  {
  public:
    virtual ~CosEvProxyPullConsumer();

    inline ::AttNotification::CosEvProxyPullConsumer_ptr _this() {
      return (::AttNotification::CosEvProxyPullConsumer_ptr) _do_this(::AttNotification::CosEvProxyPullConsumer::_PD_repoId);
    }
  };

  class ProxyPushSupplier :
    public virtual AttNotification::_impl_ProxyPushSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::ProxyPushSupplier
  {
  public:
    virtual ~ProxyPushSupplier();

    inline ::AttNotification::ProxyPushSupplier_ptr _this() {
      return (::AttNotification::ProxyPushSupplier_ptr) _do_this(::AttNotification::ProxyPushSupplier::_PD_repoId);
    }
  };

  class ProxyPullSupplier :
    public virtual AttNotification::_impl_ProxyPullSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::ProxyPullSupplier
  {
  public:
    virtual ~ProxyPullSupplier();

    inline ::AttNotification::ProxyPullSupplier_ptr _this() {
      return (::AttNotification::ProxyPullSupplier_ptr) _do_this(::AttNotification::ProxyPullSupplier::_PD_repoId);
    }
  };

  class ProxyPushConsumer :
    public virtual AttNotification::_impl_ProxyPushConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::ProxyPushConsumer
  {
  public:
    virtual ~ProxyPushConsumer();

    inline ::AttNotification::ProxyPushConsumer_ptr _this() {
      return (::AttNotification::ProxyPushConsumer_ptr) _do_this(::AttNotification::ProxyPushConsumer::_PD_repoId);
    }
  };

  class ProxyPullConsumer :
    public virtual AttNotification::_impl_ProxyPullConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::ProxyPullConsumer
  {
  public:
    virtual ~ProxyPullConsumer();

    inline ::AttNotification::ProxyPullConsumer_ptr _this() {
      return (::AttNotification::ProxyPullConsumer_ptr) _do_this(::AttNotification::ProxyPullConsumer::_PD_repoId);
    }
  };

  class StructuredProxyPushSupplier :
    public virtual AttNotification::_impl_StructuredProxyPushSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::StructuredProxyPushSupplier
  {
  public:
    virtual ~StructuredProxyPushSupplier();

    inline ::AttNotification::StructuredProxyPushSupplier_ptr _this() {
      return (::AttNotification::StructuredProxyPushSupplier_ptr) _do_this(::AttNotification::StructuredProxyPushSupplier::_PD_repoId);
    }
  };

  class StructuredProxyPullSupplier :
    public virtual AttNotification::_impl_StructuredProxyPullSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::StructuredProxyPullSupplier
  {
  public:
    virtual ~StructuredProxyPullSupplier();

    inline ::AttNotification::StructuredProxyPullSupplier_ptr _this() {
      return (::AttNotification::StructuredProxyPullSupplier_ptr) _do_this(::AttNotification::StructuredProxyPullSupplier::_PD_repoId);
    }
  };

  class StructuredProxyPushConsumer :
    public virtual AttNotification::_impl_StructuredProxyPushConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::StructuredProxyPushConsumer
  {
  public:
    virtual ~StructuredProxyPushConsumer();

    inline ::AttNotification::StructuredProxyPushConsumer_ptr _this() {
      return (::AttNotification::StructuredProxyPushConsumer_ptr) _do_this(::AttNotification::StructuredProxyPushConsumer::_PD_repoId);
    }
  };

  class StructuredProxyPullConsumer :
    public virtual AttNotification::_impl_StructuredProxyPullConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::StructuredProxyPullConsumer
  {
  public:
    virtual ~StructuredProxyPullConsumer();

    inline ::AttNotification::StructuredProxyPullConsumer_ptr _this() {
      return (::AttNotification::StructuredProxyPullConsumer_ptr) _do_this(::AttNotification::StructuredProxyPullConsumer::_PD_repoId);
    }
  };

  class SequenceProxyPushSupplier :
    public virtual AttNotification::_impl_SequenceProxyPushSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::SequenceProxyPushSupplier
  {
  public:
    virtual ~SequenceProxyPushSupplier();

    inline ::AttNotification::SequenceProxyPushSupplier_ptr _this() {
      return (::AttNotification::SequenceProxyPushSupplier_ptr) _do_this(::AttNotification::SequenceProxyPushSupplier::_PD_repoId);
    }
  };

  class SequenceProxyPullSupplier :
    public virtual AttNotification::_impl_SequenceProxyPullSupplier,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::SequenceProxyPullSupplier
  {
  public:
    virtual ~SequenceProxyPullSupplier();

    inline ::AttNotification::SequenceProxyPullSupplier_ptr _this() {
      return (::AttNotification::SequenceProxyPullSupplier_ptr) _do_this(::AttNotification::SequenceProxyPullSupplier::_PD_repoId);
    }
  };

  class SequenceProxyPushConsumer :
    public virtual AttNotification::_impl_SequenceProxyPushConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::SequenceProxyPushConsumer
  {
  public:
    virtual ~SequenceProxyPushConsumer();

    inline ::AttNotification::SequenceProxyPushConsumer_ptr _this() {
      return (::AttNotification::SequenceProxyPushConsumer_ptr) _do_this(::AttNotification::SequenceProxyPushConsumer::_PD_repoId);
    }
  };

  class SequenceProxyPullConsumer :
    public virtual AttNotification::_impl_SequenceProxyPullConsumer,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::SequenceProxyPullConsumer
  {
  public:
    virtual ~SequenceProxyPullConsumer();

    inline ::AttNotification::SequenceProxyPullConsumer_ptr _this() {
      return (::AttNotification::SequenceProxyPullConsumer_ptr) _do_this(::AttNotification::SequenceProxyPullConsumer::_PD_repoId);
    }
  };

  class SupplierAdmin :
    public virtual AttNotification::_impl_SupplierAdmin,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::SupplierAdmin
  {
  public:
    virtual ~SupplierAdmin();

    inline ::AttNotification::SupplierAdmin_ptr _this() {
      return (::AttNotification::SupplierAdmin_ptr) _do_this(::AttNotification::SupplierAdmin::_PD_repoId);
    }
  };

  class ConsumerAdmin :
    public virtual AttNotification::_impl_ConsumerAdmin,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::ConsumerAdmin
  {
  public:
    virtual ~ConsumerAdmin();

    inline ::AttNotification::ConsumerAdmin_ptr _this() {
      return (::AttNotification::ConsumerAdmin_ptr) _do_this(::AttNotification::ConsumerAdmin::_PD_repoId);
    }
  };

  class EventChannel :
    public virtual AttNotification::_impl_EventChannel,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::EventChannel
  {
  public:
    virtual ~EventChannel();

    inline ::AttNotification::EventChannel_ptr _this() {
      return (::AttNotification::EventChannel_ptr) _do_this(::AttNotification::EventChannel::_PD_repoId);
    }
  };

  class EventChannelFactory :
    public virtual AttNotification::_impl_EventChannelFactory,
    public virtual Interactive,
      public virtual POA_CosNotifyChannelAdmin::EventChannelFactory,
      public virtual POA_CosNotification::QoSAdmin,
      public virtual POA_CosNotification::AdminPropertiesAdmin
  {
  public:
    virtual ~EventChannelFactory();

    inline ::AttNotification::EventChannelFactory_ptr _this() {
      return (::AttNotification::EventChannelFactory_ptr) _do_this(::AttNotification::EventChannelFactory::_PD_repoId);
    }
  };

  class Filter :
    public virtual AttNotification::_impl_Filter,
    public virtual Interactive,
      public virtual POA_CosNotifyFilter::Filter
  {
  public:
    virtual ~Filter();

    inline ::AttNotification::Filter_ptr _this() {
      return (::AttNotification::Filter_ptr) _do_this(::AttNotification::Filter::_PD_repoId);
    }
  };

  class MappingFilter :
    public virtual AttNotification::_impl_MappingFilter,
    public virtual Interactive,
      public virtual POA_CosNotifyFilter::MappingFilter
  {
  public:
    virtual ~MappingFilter();

    inline ::AttNotification::MappingFilter_ptr _this() {
      return (::AttNotification::MappingFilter_ptr) _do_this(::AttNotification::MappingFilter::_PD_repoId);
    }
  };

  class FilterFactory :
    public virtual AttNotification::_impl_FilterFactory,
    public virtual Interactive,
      public virtual POA_CosNotifyFilter::FilterFactory
  {
  public:
    virtual ~FilterFactory();

    inline ::AttNotification::FilterFactory_ptr _this() {
      return (::AttNotification::FilterFactory_ptr) _do_this(::AttNotification::FilterFactory::_PD_repoId);
    }
  };

  class Server :
    public virtual AttNotification::_impl_Server,
    public virtual Interactive
  {
  public:
    virtual ~Server();

    inline ::AttNotification::Server_ptr _this() {
      return (::AttNotification::Server_ptr) _do_this(::AttNotification::Server::_PD_repoId);
    }
  };

_CORBA_MODULE_END



_CORBA_MODULE OBV_AttNotification
_CORBA_MODULE_BEG

_CORBA_MODULE_END





#undef _core_attr
#undef _dyn_attr

void operator<<=(::CORBA::Any& _a, const AttNotification::IactSeq& _s);
void operator<<=(::CORBA::Any& _a, AttNotification::IactSeq* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::IactSeq*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const AttNotification::IactSeq*& _sp);

void operator<<=(::CORBA::Any& _a, const AttNotification::NameSeq& _s);
void operator<<=(::CORBA::Any& _a, AttNotification::NameSeq* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::NameSeq*& _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const AttNotification::NameSeq*& _sp);

void operator<<=(::CORBA::Any& _a, AttNotification::Interactive_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::Interactive_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::Interactive_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPushSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPushSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::CosEvProxyPushSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPullSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPullSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::CosEvProxyPullSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPushConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPushConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::CosEvProxyPushConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPullConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::CosEvProxyPullConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::CosEvProxyPullConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPushSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPushSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ProxyPushSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPullSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPullSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ProxyPullSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPushConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPushConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ProxyPushConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPullConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::ProxyPullConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ProxyPullConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPushSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPushSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::StructuredProxyPushSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPullSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPullSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::StructuredProxyPullSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPushConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPushConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::StructuredProxyPushConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPullConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::StructuredProxyPullConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::StructuredProxyPullConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPushSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPushSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::SequenceProxyPushSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPullSupplier_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPullSupplier_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::SequenceProxyPullSupplier_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPushConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPushConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::SequenceProxyPushConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPullConsumer_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::SequenceProxyPullConsumer_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::SequenceProxyPullConsumer_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::SupplierAdmin_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::SupplierAdmin_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::SupplierAdmin_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::ConsumerAdmin_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::ConsumerAdmin_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ConsumerAdmin_ptr& _s);

extern void operator<<=(::CORBA::Any& _a, const AttNotification::ChannelStats& _s);
extern void operator<<=(::CORBA::Any& _a, AttNotification::ChannelStats* _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::ChannelStats*& _sp);
extern _CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const AttNotification::ChannelStats*& _sp);

void operator<<=(::CORBA::Any& _a, AttNotification::EventChannel_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::EventChannel_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::EventChannel_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::EventChannelFactory_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::EventChannelFactory_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::EventChannelFactory_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::Filter_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::Filter_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::Filter_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::MappingFilter_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::MappingFilter_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::MappingFilter_ptr& _s);

void operator<<=(::CORBA::Any& _a, AttNotification::FilterFactory_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::FilterFactory_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::FilterFactory_ptr& _s);

void operator<<=(::CORBA::Any& _a, const AttNotification::UnsupportedServerProp& _s);
void operator<<=(::CORBA::Any& _a, const AttNotification::UnsupportedServerProp* _sp);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, const AttNotification::UnsupportedServerProp*& _sp);

void operator<<=(::CORBA::Any& _a, AttNotification::Server_ptr _s);
void operator<<=(::CORBA::Any& _a, AttNotification::Server_ptr* _s);
_CORBA_Boolean operator>>=(const ::CORBA::Any& _a, AttNotification::Server_ptr& _s);



inline void
AttNotification::Interactive::_marshalObjRef(::AttNotification::Interactive_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::CosEvProxyPushSupplier::_marshalObjRef(::AttNotification::CosEvProxyPushSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::CosEvProxyPullSupplier::_marshalObjRef(::AttNotification::CosEvProxyPullSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::CosEvProxyPushConsumer::_marshalObjRef(::AttNotification::CosEvProxyPushConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::CosEvProxyPullConsumer::_marshalObjRef(::AttNotification::CosEvProxyPullConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::ProxyPushSupplier::_marshalObjRef(::AttNotification::ProxyPushSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::ProxyPullSupplier::_marshalObjRef(::AttNotification::ProxyPullSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::ProxyPushConsumer::_marshalObjRef(::AttNotification::ProxyPushConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::ProxyPullConsumer::_marshalObjRef(::AttNotification::ProxyPullConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::StructuredProxyPushSupplier::_marshalObjRef(::AttNotification::StructuredProxyPushSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::StructuredProxyPullSupplier::_marshalObjRef(::AttNotification::StructuredProxyPullSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::StructuredProxyPushConsumer::_marshalObjRef(::AttNotification::StructuredProxyPushConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::StructuredProxyPullConsumer::_marshalObjRef(::AttNotification::StructuredProxyPullConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::SequenceProxyPushSupplier::_marshalObjRef(::AttNotification::SequenceProxyPushSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::SequenceProxyPullSupplier::_marshalObjRef(::AttNotification::SequenceProxyPullSupplier_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::SequenceProxyPushConsumer::_marshalObjRef(::AttNotification::SequenceProxyPushConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::SequenceProxyPullConsumer::_marshalObjRef(::AttNotification::SequenceProxyPullConsumer_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::SupplierAdmin::_marshalObjRef(::AttNotification::SupplierAdmin_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::ConsumerAdmin::_marshalObjRef(::AttNotification::ConsumerAdmin_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::EventChannel::_marshalObjRef(::AttNotification::EventChannel_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::EventChannelFactory::_marshalObjRef(::AttNotification::EventChannelFactory_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::Filter::_marshalObjRef(::AttNotification::Filter_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::MappingFilter::_marshalObjRef(::AttNotification::MappingFilter_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::FilterFactory::_marshalObjRef(::AttNotification::FilterFactory_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}


inline void
AttNotification::Server::_marshalObjRef(::AttNotification::Server_ptr obj, cdrStream& s) {
  omniObjRef::_marshal(obj->_PR_getobj(),s);
}




#ifdef   USE_stub_in_nt_dll_NOT_DEFINED_AttNotification
# undef  USE_stub_in_nt_dll
# undef  USE_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif
#ifdef   USE_core_stub_in_nt_dll_NOT_DEFINED_AttNotification
# undef  USE_core_stub_in_nt_dll
# undef  USE_core_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif
#ifdef   USE_dyn_stub_in_nt_dll_NOT_DEFINED_AttNotification
# undef  USE_dyn_stub_in_nt_dll
# undef  USE_dyn_stub_in_nt_dll_NOT_DEFINED_AttNotification
#endif

#endif  // __AttNotification_hh__

